// Code generated by MockGen. DO NOT EDIT.
// Source: models/contact.go

// Package models is a generated GoMock package.
package models

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIContactModel is a mock of IContactModel interface.
type MockIContactModel struct {
	ctrl     *gomock.Controller
	recorder *MockIContactModelMockRecorder
}

// MockIContactModelMockRecorder is the mock recorder for MockIContactModel.
type MockIContactModelMockRecorder struct {
	mock *MockIContactModel
}

// NewMockIContactModel creates a new mock instance.
func NewMockIContactModel(ctrl *gomock.Controller) *MockIContactModel {
	mock := &MockIContactModel{ctrl: ctrl}
	mock.recorder = &MockIContactModelMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIContactModel) EXPECT() *MockIContactModelMockRecorder {
	return m.recorder
}

// ToByte mocks base method.
func (m *MockIContactModel) ToByte() ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ToByte")
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ToByte indicates an expected call of ToByte.
func (mr *MockIContactModelMockRecorder) ToByte() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ToByte", reflect.TypeOf((*MockIContactModel)(nil).ToByte))
}

// ToJSONString mocks base method.
func (m *MockIContactModel) ToJSONString() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ToJSONString")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ToJSONString indicates an expected call of ToJSONString.
func (mr *MockIContactModelMockRecorder) ToJSONString() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ToJSONString", reflect.TypeOf((*MockIContactModel)(nil).ToJSONString))
}

// Validate mocks base method.
func (m *MockIContactModel) Validate() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Validate")
	ret0, _ := ret[0].(error)
	return ret0
}

// Validate indicates an expected call of Validate.
func (mr *MockIContactModelMockRecorder) Validate() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Validate", reflect.TypeOf((*MockIContactModel)(nil).Validate))
}
